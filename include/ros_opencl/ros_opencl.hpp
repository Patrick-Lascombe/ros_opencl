#pragma once

#include <string>
#include <fstream>
#include <iterator>
#include <ros/ros.h>
#include <ros/package.h>
#include <sensor_msgs/Image.h>
#include "ros_opencl_params.hpp"
#include <sensor_msgs/LaserScan.h>
#include <sensor_msgs/PointCloud2.h>

#ifdef __APPLE__
    #include "OpenCL/opencl.h"
#else
    #include "CL/cl.h"
#endif

using namespace ros_opencl_params;

namespace ros_opencl {

/**
 * @brief      The ROS_OpenCL class.
 */
class ROS_OpenCL{

    private:
        cl_kernel kernel;                     /**< The OpenCL kernel object. */
        cl_context context;                   /**< The OpenCL context object */
        cl_program program;                   /**< The OpenCL program object */
        std::vector<cl_device_id> deviceIds;  /**< Vector to save the device IDs. */

        /**
         * @brief         The function that clears all allocated memory for
         *                OpenCL objects.
         *
         */
        void clean();

        /**
         * @brief         The function that generates ROS_WARN messages
         *                based on OpenCL error codes.
         * 
         * @param  error  The error code to be checked
         */
        void checkError (const cl_int error);

        /**
         * @brief         The function that loads the OpenCL kernel.
         *
         * @param  name   The kernel filename.
         *
         * @return        The OpenCL program name.
         */
        std::string LoadKernel (const char* name);

        /**
         * @brief         Gets the device name based on its ID.
         *
         * @param  id     The ID of the device.
         *
         * @return        The device name.
         */
        std::string getDeviceName (const cl_device_id id);

        /**
         * @brief         Gets the platform name based on its ID.
         *
         * @param  id     The ID of the platform.
         *
         * @return        The platform name.
         */
        std::string getPlatformName (const cl_platform_id id);

        /**
         * @brief           Creates an Opencl program object.
         *
         * @param  source   The program name, as generated by the LoadKernel function.
         * @param  context  An OpenCL context object.
         *
         * @return          An OpenCL program object.
         */
        cl_program createProgram (const std::string& source, const cl_context context);

    public:

        /**
         * @brief      Default (and empty) constructor.
         */
        ROS_OpenCL(){}

        /**
         * @brief                    Constructs a ROS_OpenCL object.
         *
         * @param  full_kernel_path  The full kernel path
         * @param  kernel_function   The name of the function to be used inside the kernel
         */
        ROS_OpenCL(const std::string full_kernel_path, const std::string kernel_function);

        /**
         * @brief      Copy constructor for operator= overloading.
         *
         * @param  s   A ROS_OpenCL object.
         */
        ROS_OpenCL(const ROS_OpenCL& s){}

        /**
         * @brief      Destroys a ROS_OpenCL object.
         */
        ~ROS_OpenCL();

        /**
         * @brief            Operator= overload
         *
         * @param      s     The ROS_OpenCL object to be copied.
         *
         * @return           A copy of the input ROS_OpenCL object.
         */
        ROS_OpenCL operator=(ROS_OpenCL* s);

        /**
         * @brief        The function that initiates kernel processing.
         *
         *               It uses a read/write buffer to send and receive
         *               data from the kernel. The global work size used by default,
         *               matches the size of the pointcloud's data vector. The size of the read/write
         *               buffer is typeof(char) * &lt;data vector size&gt;.
         *               The data sent to the kernel is a vector of chars (bytes).
         *
         * @param  msg   The sensor_msgs::PointCloud2 message to be processed.
         *
         * @return       A copy of the processed input.
         */
        sensor_msgs::PointCloud2 process(const sensor_msgs::PointCloud2& msg);

        /**
         * @brief        The function that initiates kernel processing.
         *
         *               It uses a read/write buffer to send and receive
         *               data from the kernel. The global work size used by default,
         *               matches the size of the pointcloud's data vector. The size of the read/write
         *               buffer is typeof(char) * &lt;data vector size&gt;.
         *               The data sent to the kernel is a vector of chars (bytes).
         *               Changes are overwritten on the input data.
         *
         * @param  msg   The sensor_msgs::PointCloud2 message to be processed.
         *
         */
        void process(sensor_msgs::PointCloud2::Ptr msg);

        /**
         * @brief        The function that initiates kernel processing.
         *
         *               It uses a read/write buffer to send and receive
         *               data from the kernel. The global work size used by default,
         *               matches the size of the laserscan's ranges vector. The size of the read/write
         *               buffer is typeof(float) * &lt;ranges vector size&gt;.
         *               The data sent to the kernel is a vector of floats.
         *
         * @param  msg   The sensor_msgs::LaserScan message to be processed.
         *
         * @return       A copy of the processed input.
         */
        sensor_msgs::LaserScan process(const sensor_msgs::LaserScan& msg);

        /**
         * @brief        The function that initiates kernel processing.
         *
         *               It uses a read/write buffer to send and receive
         *               data from the kernel. The global work size used by default,
         *               matches the size of the laserscan's ranges vector. The size of the read/write
         *               buffer is typeof(float) * &lt;ranges vector size&gt;.
         *               The data sent to the kernel is a vector of floats.
         *               Changes are overwritten on the input data.
         *
         * @param  msg   The sensor_msgs::LaserScan message to be processed.
         */
        void process(sensor_msgs::LaserScan::Ptr msg);

        /**
         * @brief        The function that initiates kernel processing.
         *
         *               It uses a read/write buffer to send and receive
         *               data from the kernel. The global work size used by default,
         *               matches the size of the images's data vector. The size of the read/write
         *               buffer is typeof(char) * &lt;data vector size&gt;.
         *               The data sent to the kernel is a vector of chars (bytes).
         *
         * @param  msg   The sensor_msgs::Image message to be processed.
         *
         * @return       A copy of the processed input.
         */
        sensor_msgs::Image process(const sensor_msgs::Image& msg);

        /**
         * @brief        The function that initiates kernel processing.
         *
         *               It uses a read/write buffer to send and receive
         *               data from the kernel. The global work size used by default,
         *               matches the size of the images's data vector. The size of the read/write
         *               buffer is typeof(char) * &lt;data vector size&gt;.
         *               The data sent to the kernel is a vector of chars (bytes).
         *               Changes are overwritten on the input data.
         *
         * @param  msg   The sensor_msgs::Image message to be processed.
         */
        void process(sensor_msgs::Image::Ptr msg);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel. The global work size used by default,
         *                             matches the size of the input vector. The size of the read/write
         *                             buffer is typeof(float) * &lt;input vector size&gt;
         *
         * @param  v                   The input data.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain only one element.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only one element.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. In this function this parameter is ignored.
         *
         * @return                     A copy of the processed input.
         */
        std::vector<float> process(const std::vector<float> v, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel. The global work size used by default,
         *                             matches the size of the input vector. The size of the read/write
         *                             buffer is typeof(float) * &lt;input vector size&gt;
         *                             Changes are overwritten on the input data.
         *
         * @param  v                   The input data.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain only one element.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only one element.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. In this function this parameter is ignored.
         *
         */
        void process(std::vector<float>* v, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel. The global work size used by default,
         *                             matches the size of the input vector. The size of the read/write
         *                             buffer is typeof(double) * &lt;input vector size&gt;
         *
         * @param  v                   The input data.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain only one element.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only one element.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. In this function this parameter is ignored.
         *
         * @return                     A copy of the processed input.
         */
        std::vector<double> process(const std::vector<double> v, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel. The global work size used by default,
         *                             matches the size of the input vector. The size of the read/write
         *                             buffer is typeof(double) * &lt;input vector size&gt;
         *                             Changes are overwritten on the input data.
         *
         * @param  v                   The input data.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain only one element.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only one element.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. In this function this parameter is ignored.
         *
         */
        void process(std::vector<double>* v, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel. The global work size used by default,
         *                             matches the size of the input vector. The size of the read/write
         *                             buffer is typeof(int) * &lt;input vector size&gt;
         *
         * @param  v                   The input data.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain only one element.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only one element.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. In this function this parameter is ignored.
         *
         * @return                     A copy of the processed input.
         */
        std::vector<int> process(const std::vector<int> v, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel. The global work size used by default,
         *                             matches the size of the input vector. The size of the read/write
         *                             buffer is typeof(int) * &lt;input vector size&gt;
         *                             Changes are overwritten on the input data.
         *
         * @param  v                   The input data.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain only one element.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only one element.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. In this function this parameter is ignored.
         *
         */
        void process(std::vector<int>* v, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel. The global work size used by default,
         *                             matches the size of the input vector. The size of the read/write
         *                             buffer is typeof(char) * &lt;input vector size&gt;
         *
         * @param  v                   The input data.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain only one element.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only one element.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. In this function this parameter is ignored.
         *
         * @return                     A copy of the processed input.
         */
        std::vector<char> process(const std::vector<char> v, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel. The global work size used by default,
         *                             matches the size of the input vector. The size of the read/write
         *                             buffer is typeof(char) * &lt;input vector size&gt;
         *                             Changes are overwritten on the input data.
         *
         * @param  v                   The input data.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain only one element.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only one element.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. In this function this parameter is ignored.
         *
         */
        void process(std::vector<char>* v, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(char) * &lt;input v size&gt;. The size of the write only buffer is
         *                             typeof(char) * &lt;input v2 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<char> process(const std::vector<char> v, const std::vector<char> v2, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(char) * &lt;input v size&gt;. The size of the write only buffer is
         *                             typeof(char) * &lt;input v2 size&gt;. Changes made inside the kernel are overwritten on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<char>* v, const std::vector<char> v2, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(char) * &lt;input v size&gt; and
         *                             typeof(char) * &lt;input v2 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<char>* v, std::vector<char>* v2, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(char) * &lt;input v size&gt;. The size of the write only buffer is
         *                             typeof(int) * &lt;input v2 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<char> process(const std::vector<char> v, const std::vector<int> v2, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(char) * &lt;input v size&gt;. The size of the write only buffer is
         *                             typeof(int) * &lt;input v2 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<char>* v, const std::vector<int> v2, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(char) * &lt;input v size&gt; and
         *                             typeof(int) * &lt;input v2 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<char>* v, std::vector<int>* v2, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(char) * &lt;input v size&gt;. The size of the write only buffer is
         *                             typeof(float) * &lt;input v2 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<char> process(const std::vector<char> v, const std::vector<float> v2, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(char) * &lt;input v size&gt;. The size of the write only buffer is
         *                             typeof(float) * &lt;input v2 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<char>* v, const std::vector<float> v2, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(char) * &lt;input v size&gt; and
         *                             typeof(float) * &lt;input v2 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<char>* v, std::vector<float>* v2, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(char) * &lt;input v size&gt;. The size of the write only buffer is
         *                             typeof(double) * &lt;input v2 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<char> process(const std::vector<char> v, const std::vector<double> v2, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(char) * &lt;input v size&gt;. The size of the write only buffer is
         *                             typeof(double) * &lt;input v2 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<char>* v, const std::vector<double> v2, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(char) * &lt;input v size&gt; and
         *                             typeof(double) * &lt;input v2 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<char>* v, std::vector<double>* v2, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(int) * &lt;input v size&gt;. The size of the write only buffer is
         *                             typeof(char) * &lt;input v2 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<int> process(const std::vector<int> v, const std::vector<char> v2, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(int) * &lt;input v size&gt;. The size of the write only buffer is
         *                             typeof(char) * &lt;input v2 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<int>* v, const std::vector<char> v2, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(int) * &lt;input v size&gt; and
         *                             typeof(char) * &lt;input v2 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<int>* v, std::vector<char>* v2, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(int) * &lt;input v size&gt;. The size of the write only buffer is
         *                             typeof(int) * &lt;input v2 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<int> process(const std::vector<int> v, const std::vector<int> v2, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(int) * &lt;input v size&gt;. The size of the write only buffer is
         *                             typeof(int) * &lt;input v2 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<int>* v, const std::vector<int> v2, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(int) * &lt;input v size&gt; and
         *                             typeof(int) * &lt;input v2 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<int>* v, std::vector<int>* v2, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(int) * &lt;input v size&gt;. The size of the write only buffer is
         *                             typeof(float) * &lt;input v2 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<int> process(const std::vector<int> v, const std::vector<float> v2, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(int) * &lt;input v size&gt;. The size of the write only buffer is
         *                             typeof(float) * &lt;input v2 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<int>* v, const std::vector<float> v2, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(int) * &lt;input v size&gt; and
         *                             typeof(float) * &lt;input v2 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<int>* v, std::vector<float>* v2, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(int) * &lt;input v size&gt;. The size of the write only buffer is
         *                             typeof(double) * &lt;input v2 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<int> process(const std::vector<int> v, const std::vector<double> v2, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(int) * &lt;input v size&gt;. The size of the write only buffer is
         *                             typeof(double) * &lt;input v2 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<int>* v, const std::vector<double> v2, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(int) * &lt;input v size&gt; and
         *                             typeof(double) * &lt;input v2 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<int>* v, std::vector<double>* v2, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(float) * &lt;input v size&gt;. The size of the write only buffer is
         *                             typeof(char) * &lt;input v2 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<float> process(const std::vector<float> v, const std::vector<char> v2, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(float) * &lt;input v size&gt;. The size of the write only buffer is
         *                             typeof(char) * &lt;input v2 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<float>* v, const std::vector<char> v2, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(float) * &lt;input v size&gt; and
         *                             typeof(char) * &lt;input v2 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<float>* v, std::vector<char>* v2, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(float) * &lt;input v size&gt;. The size of the write only buffer is
         *                             typeof(int) * &lt;input v2 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<float> process(const std::vector<float> v, const std::vector<int> v2, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(float) * &lt;input v size&gt;. The size of the write only buffer is
         *                             typeof(int) * &lt;input v2 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<float>* v, const std::vector<int> v2, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(float) * &lt;input v size&gt; and
         *                             typeof(int) * &lt;input v2 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<float>* v, std::vector<int>* v2, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(float) * &lt;input v size&gt;. The size of the write only buffer is
         *                             typeof(float) * &lt;input v2 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<float> process(const std::vector<float> v, const std::vector<float> v2, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(float) * &lt;input v size&gt;. The size of the write only buffer is
         *                             typeof(float) * &lt;input v2 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<float>* v, const std::vector<float> v2, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(float) * &lt;input v size&gt; and
         *                             typeof(float) * &lt;input v2 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<float>* v, std::vector<float>* v2, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(float) * &lt;input v size&gt;. The size of the write only buffer is
         *                             typeof(double) * &lt;input v2 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<float> process(const std::vector<float> v, const std::vector<double> v2, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(float) * &lt;input v size&gt;. The size of the write only buffer is
         *                             typeof(double) * &lt;input v2 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<float>* v, const std::vector<double> v2, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(float) * &lt;input v size&gt; and
         *                             typeof(double) * &lt;input v2 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<float>* v, std::vector<double>* v2, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(double) * &lt;input v size&gt;. The size of the write only buffer is
         *                             typeof(char) * &lt;input v2 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<double> process(const std::vector<double> v, const std::vector<char> v2, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(double) * &lt;input v size&gt;. The size of the write only buffer is
         *                             typeof(char) * &lt;input v2 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<double>* v, const std::vector<char> v2, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(double) * &lt;input v size&gt; and
         *                             typeof(char) * &lt;input v2 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<double>* v, std::vector<char>* v2, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(double) * &lt;input v size&gt;. The size of the write only buffer is
         *                             typeof(int) * &lt;input v2 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<double> process(const std::vector<double> v, const std::vector<int> v2, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(double) * &lt;input v size&gt;. The size of the write only buffer is
         *                             typeof(int) * &lt;input v2 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<double>* v, const std::vector<int> v2, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(double) * &lt;input v size&gt; and
         *                             typeof(int) * &lt;input v2 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<double>* v, std::vector<int>* v2, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(double) * &lt;input v size&gt;. The size of the write only buffer is
         *                             typeof(float) * &lt;input v2 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<double> process(const std::vector<double> v, const std::vector<float> v2, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(double) * &lt;input v size&gt;. The size of the write only buffer is
         *                             typeof(float) * &lt;input v2 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<double>* v, const std::vector<float> v2, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(double) * &lt;input v size&gt; and
         *                             typeof(float) * &lt;input v2 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<double>* v, std::vector<float>* v2, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(double) * &lt;input v size&gt;. The size of the write only buffer is
         *                             typeof(double) * &lt;input v2 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<double> process(const std::vector<double> v, const std::vector<double> v2, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(double) * &lt;input v size&gt;. The size of the write only buffer is
         *                             typeof(double) * &lt;input v2 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<double>* v, const std::vector<double> v2, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(double) * &lt;input v size&gt; and
         *                             typeof(double) * &lt;input v2 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<double>* v, std::vector<double>* v2, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(char) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(char) * &lt;input v2 size&gt; and typeof(char) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<char> process(const std::vector<char> v, const std::vector<char> v2, const std::vector<char> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(char) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(char) * &lt;input v2 size&gt; and typeof(char) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<char>* v, const std::vector<char> v2, const std::vector<char> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(char) * &lt;input v size&gt; and typeof(char) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(char) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<char>* v, std::vector<char>* v2, const std::vector<char> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(char) * &lt;input v size&gt;, 
         *                             typeof(char) * &lt;input v2 size&gt; and typeof(char) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<char>* v, std::vector<char>* v2, std::vector<char>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(char) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(char) * &lt;input v2 size&gt; and typeof(int) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<char> process(const std::vector<char> v, const std::vector<char> v2, const std::vector<int> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(char) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(char) * &lt;input v2 size&gt; and typeof(int) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<char>* v, const std::vector<char> v2, const std::vector<int> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(char) * &lt;input v size&gt; and typeof(char) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(int) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<char>* v, std::vector<char>* v2, const std::vector<int> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(char) * &lt;input v size&gt;, 
         *                             typeof(char) * &lt;input v2 size&gt; and typeof(int) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<char>* v, std::vector<char>* v2, std::vector<int>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(char) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(char) * &lt;input v2 size&gt; and typeof(float) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<char> process(const std::vector<char> v, const std::vector<char> v2, const std::vector<float> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(char) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(char) * &lt;input v2 size&gt; and typeof(float) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<char>* v, const std::vector<char> v2, const std::vector<float> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(char) * &lt;input v size&gt; and typeof(char) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(float) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<char>* v, std::vector<char>* v2, const std::vector<float> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(char) * &lt;input v size&gt;, 
         *                             typeof(char) * &lt;input v2 size&gt; and typeof(float) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<char>* v, std::vector<char>* v2, std::vector<float>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(char) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(char) * &lt;input v2 size&gt; and typeof(double) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<char> process(const std::vector<char> v, const std::vector<char> v2, const std::vector<double> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(char) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(char) * &lt;input v2 size&gt; and typeof(double) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<char>* v, const std::vector<char> v2, const std::vector<double> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(char) * &lt;input v size&gt; and typeof(char) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(double) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<char>* v, std::vector<char>* v2, const std::vector<double> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(char) * &lt;input v size&gt;, 
         *                             typeof(char) * &lt;input v2 size&gt; and typeof(double) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<char>* v, std::vector<char>* v2, std::vector<double>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(char) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(int) * &lt;input v2 size&gt; and typeof(char) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<char> process(const std::vector<char> v, const std::vector<int> v2, const std::vector<char> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(char) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(int) * &lt;input v2 size&gt; and typeof(char) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<char>* v, const std::vector<int> v2, const std::vector<char> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(char) * &lt;input v size&gt; and typeof(int) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(char) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<char>* v, std::vector<int>* v2, const std::vector<char> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(char) * &lt;input v size&gt;, 
         *                             typeof(int) * &lt;input v2 size&gt; and typeof(char) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<char>* v, std::vector<int>* v2, std::vector<char>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(char) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(int) * &lt;input v2 size&gt; and typeof(int) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<char> process(const std::vector<char> v, const std::vector<int> v2, const std::vector<int> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(char) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(int) * &lt;input v2 size&gt; and typeof(int) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<char>* v, const std::vector<int> v2, const std::vector<int> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(char) * &lt;input v size&gt; and typeof(int) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(int) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<char>* v, std::vector<int>* v2, const std::vector<int> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(char) * &lt;input v size&gt;, 
         *                             typeof(int) * &lt;input v2 size&gt; and typeof(int) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<char>* v, std::vector<int>* v2, std::vector<int>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(char) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(int) * &lt;input v2 size&gt; and typeof(float) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<char> process(const std::vector<char> v, const std::vector<int> v2, const std::vector<float> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(char) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(int) * &lt;input v2 size&gt; and typeof(float) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<char>* v, const std::vector<int> v2, const std::vector<float> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(char) * &lt;input v size&gt; and typeof(int) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(float) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<char>* v, std::vector<int>* v2, const std::vector<float> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(char) * &lt;input v size&gt;, 
         *                             typeof(int) * &lt;input v2 size&gt; and typeof(float) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<char>* v, std::vector<int>* v2, std::vector<float>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(char) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(int) * &lt;input v2 size&gt; and typeof(double) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<char> process(const std::vector<char> v, const std::vector<int> v2, const std::vector<double> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(char) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(int) * &lt;input v2 size&gt; and typeof(double) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<char>* v, const std::vector<int> v2, const std::vector<double> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(char) * &lt;input v size&gt; and typeof(int) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(double) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<char>* v, std::vector<int>* v2, const std::vector<double> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(char) * &lt;input v size&gt;, 
         *                             typeof(int) * &lt;input v2 size&gt; and typeof(double) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<char>* v, std::vector<int>* v2, std::vector<double>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(char) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(float) * &lt;input v2 size&gt; and typeof(char) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<char> process(const std::vector<char> v, const std::vector<float> v2, const std::vector<char> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(char) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(float) * &lt;input v2 size&gt; and typeof(char) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<char>* v, const std::vector<float> v2, const std::vector<char> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(char) * &lt;input v size&gt; and typeof(float) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(char) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<char>* v, std::vector<float>* v2, const std::vector<char> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(char) * &lt;input v size&gt;, 
         *                             typeof(float) * &lt;input v2 size&gt; and typeof(char) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<char>* v, std::vector<float>* v2, std::vector<char>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(char) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(float) * &lt;input v2 size&gt; and typeof(int) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<char> process(const std::vector<char> v, const std::vector<float> v2, const std::vector<int> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(char) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(float) * &lt;input v2 size&gt; and typeof(int) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<char>* v, const std::vector<float> v2, const std::vector<int> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(char) * &lt;input v size&gt; and typeof(float) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(int) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<char>* v, std::vector<float>* v2, const std::vector<int> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(char) * &lt;input v size&gt;, 
         *                             typeof(float) * &lt;input v2 size&gt; and typeof(int) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<char>* v, std::vector<float>* v2, std::vector<int>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(char) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(float) * &lt;input v2 size&gt; and typeof(float) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<char> process(const std::vector<char> v, const std::vector<float> v2, const std::vector<float> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(char) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(float) * &lt;input v2 size&gt; and typeof(float) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<char>* v, const std::vector<float> v2, const std::vector<float> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(char) * &lt;input v size&gt; and typeof(float) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(float) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<char>* v, std::vector<float>* v2, const std::vector<float> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(char) * &lt;input v size&gt;, 
         *                             typeof(float) * &lt;input v2 size&gt; and typeof(float) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<char>* v, std::vector<float>* v2, std::vector<float>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(char) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(float) * &lt;input v2 size&gt; and typeof(double) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<char> process(const std::vector<char> v, const std::vector<float> v2, const std::vector<double> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(char) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(float) * &lt;input v2 size&gt; and typeof(double) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<char>* v, const std::vector<float> v2, const std::vector<double> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(char) * &lt;input v size&gt; and typeof(float) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(double) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<char>* v, std::vector<float>* v2, const std::vector<double> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(char) * &lt;input v size&gt;, 
         *                             typeof(float) * &lt;input v2 size&gt; and typeof(double) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<char>* v, std::vector<float>* v2, std::vector<double>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(char) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(double) * &lt;input v2 size&gt; and typeof(char) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<char> process(const std::vector<char> v, const std::vector<double> v2, const std::vector<char> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(char) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(double) * &lt;input v2 size&gt; and typeof(char) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<char>* v, const std::vector<double> v2, const std::vector<char> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(char) * &lt;input v size&gt; and typeof(double) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(char) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<char>* v, std::vector<double>* v2, const std::vector<char> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(char) * &lt;input v size&gt;, 
         *                             typeof(double) * &lt;input v2 size&gt; and typeof(char) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<char>* v, std::vector<double>* v2, std::vector<char>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(char) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(double) * &lt;input v2 size&gt; and typeof(int) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<char> process(const std::vector<char> v, const std::vector<double> v2, const std::vector<int> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(char) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(double) * &lt;input v2 size&gt; and typeof(int) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<char>* v, const std::vector<double> v2, const std::vector<int> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(char) * &lt;input v size&gt; and typeof(double) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(int) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<char>* v, std::vector<double>* v2, const std::vector<int> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(char) * &lt;input v size&gt;, 
         *                             typeof(double) * &lt;input v2 size&gt; and typeof(int) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<char>* v, std::vector<double>* v2, std::vector<int>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(char) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(double) * &lt;input v2 size&gt; and typeof(float) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<char> process(const std::vector<char> v, const std::vector<double> v2, const std::vector<float> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(char) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(double) * &lt;input v2 size&gt; and typeof(float) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<char>* v, const std::vector<double> v2, const std::vector<float> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(char) * &lt;input v size&gt; and typeof(double) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(float) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<char>* v, std::vector<double>* v2, const std::vector<float> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(char) * &lt;input v size&gt;, 
         *                             typeof(double) * &lt;input v2 size&gt; and typeof(float) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<char>* v, std::vector<double>* v2, std::vector<float>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(char) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(double) * &lt;input v2 size&gt; and typeof(double) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<char> process(const std::vector<char> v, const std::vector<double> v2, const std::vector<double> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(char) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(double) * &lt;input v2 size&gt; and typeof(double) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<char>* v, const std::vector<double> v2, const std::vector<double> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(char) * &lt;input v size&gt; and typeof(double) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(double) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<char>* v, std::vector<double>* v2, const std::vector<double> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(char) * &lt;input v size&gt;, 
         *                             typeof(double) * &lt;input v2 size&gt; and typeof(double) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<char>* v, std::vector<double>* v2, std::vector<double>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(int) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(char) * &lt;input v2 size&gt; and typeof(char) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<int> process(const std::vector<int> v, const std::vector<char> v2, const std::vector<char> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(int) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(char) * &lt;input v2 size&gt; and typeof(char) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<int>* v, const std::vector<char> v2, const std::vector<char> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(int) * &lt;input v size&gt; and typeof(char) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(char) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<int>* v, std::vector<char>* v2, const std::vector<char> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(int) * &lt;input v size&gt;, 
         *                             typeof(char) * &lt;input v2 size&gt; and typeof(char) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<int>* v, std::vector<char>* v2, std::vector<char>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(int) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(char) * &lt;input v2 size&gt; and typeof(int) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<int> process(const std::vector<int> v, const std::vector<char> v2, const std::vector<int> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(int) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(char) * &lt;input v2 size&gt; and typeof(int) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<int>* v, const std::vector<char> v2, const std::vector<int> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(int) * &lt;input v size&gt; and typeof(char) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(int) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<int>* v, std::vector<char>* v2, const std::vector<int> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(int) * &lt;input v size&gt;, 
         *                             typeof(char) * &lt;input v2 size&gt; and typeof(int) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<int>* v, std::vector<char>* v2, std::vector<int>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(int) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(char) * &lt;input v2 size&gt; and typeof(float) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<int> process(const std::vector<int> v, const std::vector<char> v2, const std::vector<float> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(int) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(char) * &lt;input v2 size&gt; and typeof(float) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<int>* v, const std::vector<char> v2, const std::vector<float> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(int) * &lt;input v size&gt; and typeof(char) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(float) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<int>* v, std::vector<char>* v2, const std::vector<float> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(int) * &lt;input v size&gt;, 
         *                             typeof(char) * &lt;input v2 size&gt; and typeof(float) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<int>* v, std::vector<char>* v2, std::vector<float>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(int) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(char) * &lt;input v2 size&gt; and typeof(double) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<int> process(const std::vector<int> v, const std::vector<char> v2, const std::vector<double> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(int) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(char) * &lt;input v2 size&gt; and typeof(double) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<int>* v, const std::vector<char> v2, const std::vector<double> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(int) * &lt;input v size&gt; and typeof(char) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(double) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<int>* v, std::vector<char>* v2, const std::vector<double> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(int) * &lt;input v size&gt;, 
         *                             typeof(char) * &lt;input v2 size&gt; and typeof(double) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<int>* v, std::vector<char>* v2, std::vector<double>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(int) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(int) * &lt;input v2 size&gt; and typeof(char) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<int> process(const std::vector<int> v, const std::vector<int> v2, const std::vector<char> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(int) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(int) * &lt;input v2 size&gt; and typeof(char) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<int>* v, const std::vector<int> v2, const std::vector<char> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(int) * &lt;input v size&gt; and typeof(int) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(char) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<int>* v, std::vector<int>* v2, const std::vector<char> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(int) * &lt;input v size&gt;, 
         *                             typeof(int) * &lt;input v2 size&gt; and typeof(char) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<int>* v, std::vector<int>* v2, std::vector<char>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(int) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(int) * &lt;input v2 size&gt; and typeof(int) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<int> process(const std::vector<int> v, const std::vector<int> v2, const std::vector<int> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(int) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(int) * &lt;input v2 size&gt; and typeof(int) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<int>* v, const std::vector<int> v2, const std::vector<int> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(int) * &lt;input v size&gt; and typeof(int) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(int) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<int>* v, std::vector<int>* v2, const std::vector<int> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(int) * &lt;input v size&gt;, 
         *                             typeof(int) * &lt;input v2 size&gt; and typeof(int) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<int>* v, std::vector<int>* v2, std::vector<int>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(int) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(int) * &lt;input v2 size&gt; and typeof(float) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<int> process(const std::vector<int> v, const std::vector<int> v2, const std::vector<float> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(int) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(int) * &lt;input v2 size&gt; and typeof(float) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<int>* v, const std::vector<int> v2, const std::vector<float> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(int) * &lt;input v size&gt; and typeof(int) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(float) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<int>* v, std::vector<int>* v2, const std::vector<float> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(int) * &lt;input v size&gt;, 
         *                             typeof(int) * &lt;input v2 size&gt; and typeof(float) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<int>* v, std::vector<int>* v2, std::vector<float>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(int) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(int) * &lt;input v2 size&gt; and typeof(double) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<int> process(const std::vector<int> v, const std::vector<int> v2, const std::vector<double> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(int) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(int) * &lt;input v2 size&gt; and typeof(double) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<int>* v, const std::vector<int> v2, const std::vector<double> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(int) * &lt;input v size&gt; and typeof(int) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(double) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<int>* v, std::vector<int>* v2, const std::vector<double> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(int) * &lt;input v size&gt;, 
         *                             typeof(int) * &lt;input v2 size&gt; and typeof(double) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<int>* v, std::vector<int>* v2, std::vector<double>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(int) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(float) * &lt;input v2 size&gt; and typeof(char) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<int> process(const std::vector<int> v, const std::vector<float> v2, const std::vector<char> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(int) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(float) * &lt;input v2 size&gt; and typeof(char) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<int>* v, const std::vector<float> v2, const std::vector<char> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(int) * &lt;input v size&gt; and typeof(float) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(char) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<int>* v, std::vector<float>* v2, const std::vector<char> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(int) * &lt;input v size&gt;, 
         *                             typeof(float) * &lt;input v2 size&gt; and typeof(char) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<int>* v, std::vector<float>* v2, std::vector<char>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(int) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(float) * &lt;input v2 size&gt; and typeof(int) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<int> process(const std::vector<int> v, const std::vector<float> v2, const std::vector<int> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(int) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(float) * &lt;input v2 size&gt; and typeof(int) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<int>* v, const std::vector<float> v2, const std::vector<int> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(int) * &lt;input v size&gt; and typeof(float) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(int) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<int>* v, std::vector<float>* v2, const std::vector<int> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(int) * &lt;input v size&gt;, 
         *                             typeof(float) * &lt;input v2 size&gt; and typeof(int) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<int>* v, std::vector<float>* v2, std::vector<int>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(int) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(float) * &lt;input v2 size&gt; and typeof(float) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<int> process(const std::vector<int> v, const std::vector<float> v2, const std::vector<float> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(int) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(float) * &lt;input v2 size&gt; and typeof(float) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<int>* v, const std::vector<float> v2, const std::vector<float> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(int) * &lt;input v size&gt; and typeof(float) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(float) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<int>* v, std::vector<float>* v2, const std::vector<float> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(int) * &lt;input v size&gt;, 
         *                             typeof(float) * &lt;input v2 size&gt; and typeof(float) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<int>* v, std::vector<float>* v2, std::vector<float>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(int) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(float) * &lt;input v2 size&gt; and typeof(double) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<int> process(const std::vector<int> v, const std::vector<float> v2, const std::vector<double> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(int) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(float) * &lt;input v2 size&gt; and typeof(double) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<int>* v, const std::vector<float> v2, const std::vector<double> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(int) * &lt;input v size&gt; and typeof(float) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(double) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<int>* v, std::vector<float>* v2, const std::vector<double> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(int) * &lt;input v size&gt;, 
         *                             typeof(float) * &lt;input v2 size&gt; and typeof(double) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<int>* v, std::vector<float>* v2, std::vector<double>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(int) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(double) * &lt;input v2 size&gt; and typeof(char) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<int> process(const std::vector<int> v, const std::vector<double> v2, const std::vector<char> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(int) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(double) * &lt;input v2 size&gt; and typeof(char) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<int>* v, const std::vector<double> v2, const std::vector<char> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(int) * &lt;input v size&gt; and typeof(double) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(char) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<int>* v, std::vector<double>* v2, const std::vector<char> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(int) * &lt;input v size&gt;, 
         *                             typeof(double) * &lt;input v2 size&gt; and typeof(char) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<int>* v, std::vector<double>* v2, std::vector<char>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(int) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(double) * &lt;input v2 size&gt; and typeof(int) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<int> process(const std::vector<int> v, const std::vector<double> v2, const std::vector<int> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(int) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(double) * &lt;input v2 size&gt; and typeof(int) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<int>* v, const std::vector<double> v2, const std::vector<int> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(int) * &lt;input v size&gt; and typeof(double) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(int) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<int>* v, std::vector<double>* v2, const std::vector<int> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(int) * &lt;input v size&gt;, 
         *                             typeof(double) * &lt;input v2 size&gt; and typeof(int) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<int>* v, std::vector<double>* v2, std::vector<int>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(int) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(double) * &lt;input v2 size&gt; and typeof(float) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<int> process(const std::vector<int> v, const std::vector<double> v2, const std::vector<float> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(int) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(double) * &lt;input v2 size&gt; and typeof(float) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<int>* v, const std::vector<double> v2, const std::vector<float> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(int) * &lt;input v size&gt; and typeof(double) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(float) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<int>* v, std::vector<double>* v2, const std::vector<float> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(int) * &lt;input v size&gt;, 
         *                             typeof(double) * &lt;input v2 size&gt; and typeof(float) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<int>* v, std::vector<double>* v2, std::vector<float>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(int) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(double) * &lt;input v2 size&gt; and typeof(double) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<int> process(const std::vector<int> v, const std::vector<double> v2, const std::vector<double> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(int) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(double) * &lt;input v2 size&gt; and typeof(double) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<int>* v, const std::vector<double> v2, const std::vector<double> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(int) * &lt;input v size&gt; and typeof(double) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(double) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<int>* v, std::vector<double>* v2, const std::vector<double> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(int) * &lt;input v size&gt;, 
         *                             typeof(double) * &lt;input v2 size&gt; and typeof(double) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<int>* v, std::vector<double>* v2, std::vector<double>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(float) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(char) * &lt;input v2 size&gt; and typeof(char) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<float> process(const std::vector<float> v, const std::vector<char> v2, const std::vector<char> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(float) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(char) * &lt;input v2 size&gt; and typeof(char) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<float>* v, const std::vector<char> v2, const std::vector<char> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(float) * &lt;input v size&gt; and typeof(char) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(char) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<float>* v, std::vector<char>* v2, const std::vector<char> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(float) * &lt;input v size&gt;, 
         *                             typeof(char) * &lt;input v2 size&gt; and typeof(char) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<float>* v, std::vector<char>* v2, std::vector<char>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(float) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(char) * &lt;input v2 size&gt; and typeof(int) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<float> process(const std::vector<float> v, const std::vector<char> v2, const std::vector<int> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(float) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(char) * &lt;input v2 size&gt; and typeof(int) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<float>* v, const std::vector<char> v2, const std::vector<int> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(float) * &lt;input v size&gt; and typeof(char) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(int) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<float>* v, std::vector<char>* v2, const std::vector<int> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(float) * &lt;input v size&gt;, 
         *                             typeof(char) * &lt;input v2 size&gt; and typeof(int) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<float>* v, std::vector<char>* v2, std::vector<int>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(float) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(char) * &lt;input v2 size&gt; and typeof(float) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<float> process(const std::vector<float> v, const std::vector<char> v2, const std::vector<float> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(float) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(char) * &lt;input v2 size&gt; and typeof(float) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<float>* v, const std::vector<char> v2, const std::vector<float> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(float) * &lt;input v size&gt; and typeof(char) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(float) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<float>* v, std::vector<char>* v2, const std::vector<float> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(float) * &lt;input v size&gt;, 
         *                             typeof(char) * &lt;input v2 size&gt; and typeof(float) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<float>* v, std::vector<char>* v2, std::vector<float>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(float) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(char) * &lt;input v2 size&gt; and typeof(double) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<float> process(const std::vector<float> v, const std::vector<char> v2, const std::vector<double> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(float) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(char) * &lt;input v2 size&gt; and typeof(double) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<float>* v, const std::vector<char> v2, const std::vector<double> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(float) * &lt;input v size&gt; and typeof(char) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(double) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<float>* v, std::vector<char>* v2, const std::vector<double> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(float) * &lt;input v size&gt;, 
         *                             typeof(char) * &lt;input v2 size&gt; and typeof(double) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<float>* v, std::vector<char>* v2, std::vector<double>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(float) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(int) * &lt;input v2 size&gt; and typeof(char) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<float> process(const std::vector<float> v, const std::vector<int> v2, const std::vector<char> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(float) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(int) * &lt;input v2 size&gt; and typeof(char) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<float>* v, const std::vector<int> v2, const std::vector<char> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(float) * &lt;input v size&gt; and typeof(int) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(char) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<float>* v, std::vector<int>* v2, const std::vector<char> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(float) * &lt;input v size&gt;, 
         *                             typeof(int) * &lt;input v2 size&gt; and typeof(char) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<float>* v, std::vector<int>* v2, std::vector<char>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(float) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(int) * &lt;input v2 size&gt; and typeof(int) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<float> process(const std::vector<float> v, const std::vector<int> v2, const std::vector<int> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(float) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(int) * &lt;input v2 size&gt; and typeof(int) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<float>* v, const std::vector<int> v2, const std::vector<int> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(float) * &lt;input v size&gt; and typeof(int) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(int) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<float>* v, std::vector<int>* v2, const std::vector<int> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(float) * &lt;input v size&gt;, 
         *                             typeof(int) * &lt;input v2 size&gt; and typeof(int) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<float>* v, std::vector<int>* v2, std::vector<int>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(float) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(int) * &lt;input v2 size&gt; and typeof(float) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<float> process(const std::vector<float> v, const std::vector<int> v2, const std::vector<float> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(float) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(int) * &lt;input v2 size&gt; and typeof(float) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<float>* v, const std::vector<int> v2, const std::vector<float> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(float) * &lt;input v size&gt; and typeof(int) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(float) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<float>* v, std::vector<int>* v2, const std::vector<float> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(float) * &lt;input v size&gt;, 
         *                             typeof(int) * &lt;input v2 size&gt; and typeof(float) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<float>* v, std::vector<int>* v2, std::vector<float>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(float) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(int) * &lt;input v2 size&gt; and typeof(double) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<float> process(const std::vector<float> v, const std::vector<int> v2, const std::vector<double> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(float) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(int) * &lt;input v2 size&gt; and typeof(double) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is
         *                             ignored with a warning.
         *
         */
        void process(const std::vector<float> v, const std::vector<float> v2, const std::vector<float> v3, std::vector<float>* v4, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(float) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(int) * &lt;input v2 size&gt; and typeof(double) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is
         *                             ignored with a warning.
         *
         */
        void process(const std::vector<float> vx, const std::vector<float> vy, const std::vector<float> vz, std::vector<float> numDivs, std::vector<float> bounds, std::vector<int>* numPoints, std::vector<int>* firstPoint, std::vector<unsigned int>* indices, float voxelSize, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(float) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(int) * &lt;input v2 size&gt; and typeof(double) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<float>* v, const std::vector<int> v2, const std::vector<double> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(float) * &lt;input v size&gt; and typeof(int) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(double) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<float>* v, std::vector<int>* v2, const std::vector<double> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(float) * &lt;input v size&gt;, 
         *                             typeof(int) * &lt;input v2 size&gt; and typeof(double) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<float>* v, std::vector<int>* v2, std::vector<double>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(float) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(float) * &lt;input v2 size&gt; and typeof(char) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<float> process(const std::vector<float> v, const std::vector<float> v2, const std::vector<char> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(float) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(float) * &lt;input v2 size&gt; and typeof(char) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<float>* v, const std::vector<float> v2, const std::vector<char> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(float) * &lt;input v size&gt; and typeof(float) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(char) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<float>* v, std::vector<float>* v2, const std::vector<char> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(float) * &lt;input v size&gt;, 
         *                             typeof(float) * &lt;input v2 size&gt; and typeof(char) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<float>* v, std::vector<float>* v2, std::vector<char>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(float) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(float) * &lt;input v2 size&gt; and typeof(int) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<float> process(const std::vector<float> v, const std::vector<float> v2, const std::vector<int> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(float) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(float) * &lt;input v2 size&gt; and typeof(int) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<float>* v, const std::vector<float> v2, const std::vector<int> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(float) * &lt;input v size&gt; and typeof(float) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(int) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<float>* v, std::vector<float>* v2, const std::vector<int> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(float) * &lt;input v size&gt;, 
         *                             typeof(float) * &lt;input v2 size&gt; and typeof(int) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<float>* v, std::vector<float>* v2, std::vector<int>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(float) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(float) * &lt;input v2 size&gt; and typeof(float) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<float> process(const std::vector<float> v, const std::vector<float> v2, const std::vector<float> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(float) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(float) * &lt;input v2 size&gt; and typeof(float) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<float>* v, const std::vector<float> v2, const std::vector<float> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(float) * &lt;input v size&gt; and typeof(float) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(float) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<float>* v, std::vector<float>* v2, const std::vector<float> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(float) * &lt;input v size&gt;, 
         *                             typeof(float) * &lt;input v2 size&gt; and typeof(float) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<float>* v, std::vector<float>* v2, std::vector<float>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(float) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(float) * &lt;input v2 size&gt; and typeof(double) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<float> process(const std::vector<float> v, const std::vector<float> v2, const std::vector<double> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(float) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(float) * &lt;input v2 size&gt; and typeof(double) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<float>* v, const std::vector<float> v2, const std::vector<double> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(float) * &lt;input v size&gt; and typeof(float) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(double) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<float>* v, std::vector<float>* v2, const std::vector<double> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(float) * &lt;input v size&gt;, 
         *                             typeof(float) * &lt;input v2 size&gt; and typeof(double) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<float>* v, std::vector<float>* v2, std::vector<double>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(float) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(double) * &lt;input v2 size&gt; and typeof(char) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<float> process(const std::vector<float> v, const std::vector<double> v2, const std::vector<char> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(float) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(double) * &lt;input v2 size&gt; and typeof(char) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<float>* v, const std::vector<double> v2, const std::vector<char> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(float) * &lt;input v size&gt; and typeof(double) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(char) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<float>* v, std::vector<double>* v2, const std::vector<char> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(float) * &lt;input v size&gt;, 
         *                             typeof(double) * &lt;input v2 size&gt; and typeof(char) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<float>* v, std::vector<double>* v2, std::vector<char>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(float) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(double) * &lt;input v2 size&gt; and typeof(int) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<float> process(const std::vector<float> v, const std::vector<double> v2, const std::vector<int> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(float) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(double) * &lt;input v2 size&gt; and typeof(int) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<float>* v, const std::vector<double> v2, const std::vector<int> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(float) * &lt;input v size&gt; and typeof(double) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(int) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<float>* v, std::vector<double>* v2, const std::vector<int> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(float) * &lt;input v size&gt;, 
         *                             typeof(double) * &lt;input v2 size&gt; and typeof(int) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<float>* v, std::vector<double>* v2, std::vector<int>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(float) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(double) * &lt;input v2 size&gt; and typeof(float) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<float> process(const std::vector<float> v, const std::vector<double> v2, const std::vector<float> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(float) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(double) * &lt;input v2 size&gt; and typeof(float) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<float>* v, const std::vector<double> v2, const std::vector<float> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(float) * &lt;input v size&gt; and typeof(double) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(float) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<float>* v, std::vector<double>* v2, const std::vector<float> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(float) * &lt;input v size&gt;, 
         *                             typeof(double) * &lt;input v2 size&gt; and typeof(float) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<float>* v, std::vector<double>* v2, std::vector<float>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(float) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(double) * &lt;input v2 size&gt; and typeof(double) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<float> process(const std::vector<float> v, const std::vector<double> v2, const std::vector<double> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(float) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(double) * &lt;input v2 size&gt; and typeof(double) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<float>* v, const std::vector<double> v2, const std::vector<double> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(float) * &lt;input v size&gt; and typeof(double) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(double) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<float>* v, std::vector<double>* v2, const std::vector<double> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(float) * &lt;input v size&gt;, 
         *                             typeof(double) * &lt;input v2 size&gt; and typeof(double) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<float>* v, std::vector<double>* v2, std::vector<double>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(double) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(char) * &lt;input v2 size&gt; and typeof(char) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<double> process(const std::vector<double> v, const std::vector<char> v2, const std::vector<char> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(double) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(char) * &lt;input v2 size&gt; and typeof(char) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<double>* v, const std::vector<char> v2, const std::vector<char> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(double) * &lt;input v size&gt; and typeof(char) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(char) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<double>* v, std::vector<char>* v2, const std::vector<char> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(double) * &lt;input v size&gt;, 
         *                             typeof(char) * &lt;input v2 size&gt; and typeof(char) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<double>* v, std::vector<char>* v2, std::vector<char>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(double) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(char) * &lt;input v2 size&gt; and typeof(int) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<double> process(const std::vector<double> v, const std::vector<char> v2, const std::vector<int> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(double) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(char) * &lt;input v2 size&gt; and typeof(int) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<double>* v, const std::vector<char> v2, const std::vector<int> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(double) * &lt;input v size&gt; and typeof(char) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(int) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<double>* v, std::vector<char>* v2, const std::vector<int> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(double) * &lt;input v size&gt;, 
         *                             typeof(char) * &lt;input v2 size&gt; and typeof(int) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<double>* v, std::vector<char>* v2, std::vector<int>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(double) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(char) * &lt;input v2 size&gt; and typeof(float) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<double> process(const std::vector<double> v, const std::vector<char> v2, const std::vector<float> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(double) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(char) * &lt;input v2 size&gt; and typeof(float) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<double>* v, const std::vector<char> v2, const std::vector<float> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(double) * &lt;input v size&gt; and typeof(char) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(float) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<double>* v, std::vector<char>* v2, const std::vector<float> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(double) * &lt;input v size&gt;, 
         *                             typeof(char) * &lt;input v2 size&gt; and typeof(float) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<double>* v, std::vector<char>* v2, std::vector<float>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(double) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(char) * &lt;input v2 size&gt; and typeof(double) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<double> process(const std::vector<double> v, const std::vector<char> v2, const std::vector<double> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(double) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(char) * &lt;input v2 size&gt; and typeof(double) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<double>* v, const std::vector<char> v2, const std::vector<double> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(double) * &lt;input v size&gt; and typeof(char) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(double) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<double>* v, std::vector<char>* v2, const std::vector<double> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(double) * &lt;input v size&gt;, 
         *                             typeof(char) * &lt;input v2 size&gt; and typeof(double) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<double>* v, std::vector<char>* v2, std::vector<double>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(double) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(int) * &lt;input v2 size&gt; and typeof(char) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<double> process(const std::vector<double> v, const std::vector<int> v2, const std::vector<char> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(double) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(int) * &lt;input v2 size&gt; and typeof(char) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<double>* v, const std::vector<int> v2, const std::vector<char> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(double) * &lt;input v size&gt; and typeof(int) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(char) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<double>* v, std::vector<int>* v2, const std::vector<char> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(double) * &lt;input v size&gt;, 
         *                             typeof(int) * &lt;input v2 size&gt; and typeof(char) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<double>* v, std::vector<int>* v2, std::vector<char>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(double) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(int) * &lt;input v2 size&gt; and typeof(int) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<double> process(const std::vector<double> v, const std::vector<int> v2, const std::vector<int> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(double) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(int) * &lt;input v2 size&gt; and typeof(int) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<double>* v, const std::vector<int> v2, const std::vector<int> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(double) * &lt;input v size&gt; and typeof(int) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(int) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<double>* v, std::vector<int>* v2, const std::vector<int> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(double) * &lt;input v size&gt;, 
         *                             typeof(int) * &lt;input v2 size&gt; and typeof(int) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<double>* v, std::vector<int>* v2, std::vector<int>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(double) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(int) * &lt;input v2 size&gt; and typeof(float) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<double> process(const std::vector<double> v, const std::vector<int> v2, const std::vector<float> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(double) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(int) * &lt;input v2 size&gt; and typeof(float) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<double>* v, const std::vector<int> v2, const std::vector<float> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(double) * &lt;input v size&gt; and typeof(int) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(float) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<double>* v, std::vector<int>* v2, const std::vector<float> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(double) * &lt;input v size&gt;, 
         *                             typeof(int) * &lt;input v2 size&gt; and typeof(float) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<double>* v, std::vector<int>* v2, std::vector<float>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(double) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(int) * &lt;input v2 size&gt; and typeof(double) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<double> process(const std::vector<double> v, const std::vector<int> v2, const std::vector<double> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(double) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(int) * &lt;input v2 size&gt; and typeof(double) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<double>* v, const std::vector<int> v2, const std::vector<double> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(double) * &lt;input v size&gt; and typeof(int) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(double) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<double>* v, std::vector<int>* v2, const std::vector<double> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(double) * &lt;input v size&gt;, 
         *                             typeof(int) * &lt;input v2 size&gt; and typeof(double) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<double>* v, std::vector<int>* v2, std::vector<double>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(double) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(float) * &lt;input v2 size&gt; and typeof(char) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<double> process(const std::vector<double> v, const std::vector<float> v2, const std::vector<char> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(double) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(float) * &lt;input v2 size&gt; and typeof(char) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<double>* v, const std::vector<float> v2, const std::vector<char> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(double) * &lt;input v size&gt; and typeof(float) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(char) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<double>* v, std::vector<float>* v2, const std::vector<char> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(double) * &lt;input v size&gt;, 
         *                             typeof(float) * &lt;input v2 size&gt; and typeof(char) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<double>* v, std::vector<float>* v2, std::vector<char>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(double) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(float) * &lt;input v2 size&gt; and typeof(int) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<double> process(const std::vector<double> v, const std::vector<float> v2, const std::vector<int> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(double) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(float) * &lt;input v2 size&gt; and typeof(int) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<double>* v, const std::vector<float> v2, const std::vector<int> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(double) * &lt;input v size&gt; and typeof(float) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(int) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<double>* v, std::vector<float>* v2, const std::vector<int> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(double) * &lt;input v size&gt;, 
         *                             typeof(float) * &lt;input v2 size&gt; and typeof(int) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<double>* v, std::vector<float>* v2, std::vector<int>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(double) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(float) * &lt;input v2 size&gt; and typeof(float) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<double> process(const std::vector<double> v, const std::vector<float> v2, const std::vector<float> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(double) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(float) * &lt;input v2 size&gt; and typeof(float) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<double>* v, const std::vector<float> v2, const std::vector<float> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(double) * &lt;input v size&gt; and typeof(float) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(float) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<double>* v, std::vector<float>* v2, const std::vector<float> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(double) * &lt;input v size&gt;, 
         *                             typeof(float) * &lt;input v2 size&gt; and typeof(float) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<double>* v, std::vector<float>* v2, std::vector<float>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(double) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(float) * &lt;input v2 size&gt; and typeof(double) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<double> process(const std::vector<double> v, const std::vector<float> v2, const std::vector<double> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(double) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(float) * &lt;input v2 size&gt; and typeof(double) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<double>* v, const std::vector<float> v2, const std::vector<double> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(double) * &lt;input v size&gt; and typeof(float) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(double) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<double>* v, std::vector<float>* v2, const std::vector<double> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(double) * &lt;input v size&gt;, 
         *                             typeof(float) * &lt;input v2 size&gt; and typeof(double) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<double>* v, std::vector<float>* v2, std::vector<double>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(double) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(double) * &lt;input v2 size&gt; and typeof(char) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<double> process(const std::vector<double> v, const std::vector<double> v2, const std::vector<char> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(double) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(double) * &lt;input v2 size&gt; and typeof(char) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<double>* v, const std::vector<double> v2, const std::vector<char> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(double) * &lt;input v size&gt; and typeof(double) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(char) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<double>* v, std::vector<double>* v2, const std::vector<char> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(double) * &lt;input v size&gt;, 
         *                             typeof(double) * &lt;input v2 size&gt; and typeof(char) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<double>* v, std::vector<double>* v2, std::vector<char>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(double) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(double) * &lt;input v2 size&gt; and typeof(int) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<double> process(const std::vector<double> v, const std::vector<double> v2, const std::vector<int> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(double) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(double) * &lt;input v2 size&gt; and typeof(int) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<double>* v, const std::vector<double> v2, const std::vector<int> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(double) * &lt;input v size&gt; and typeof(double) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(int) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<double>* v, std::vector<double>* v2, const std::vector<int> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(double) * &lt;input v size&gt;, 
         *                             typeof(double) * &lt;input v2 size&gt; and typeof(int) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<double>* v, std::vector<double>* v2, std::vector<int>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(double) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(double) * &lt;input v2 size&gt; and typeof(float) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<double> process(const std::vector<double> v, const std::vector<double> v2, const std::vector<float> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(double) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(double) * &lt;input v2 size&gt; and typeof(float) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<double>* v, const std::vector<double> v2, const std::vector<float> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(double) * &lt;input v size&gt; and typeof(double) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(float) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<double>* v, std::vector<double>* v2, const std::vector<float> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(double) * &lt;input v size&gt;, 
         *                             typeof(double) * &lt;input v2 size&gt; and typeof(float) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<double>* v, std::vector<double>* v2, std::vector<float>* v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(double) * &lt;input v size&gt;. The size of the write only buffers are
         *                             typeof(double) * &lt;input v2 size&gt; and typeof(double) * &lt;input v3 size&gt;.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of three elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         * @return                     A copy of the processed input based on v.
         */
        std::vector<double> process(const std::vector<double> v, const std::vector<double> v2, const std::vector<double> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first vector and a write only buffer for 
         *                             the second and third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffer is typeof(double) * &lt;input v size&gt;. The size of the write only buffers is
         *                             typeof(double) * &lt;input v2 size&gt; and typeof(double) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten only on v.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<double>* v, const std::vector<double> v2, const std::vector<double> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first and second vector and a write only buffer for 
         *                             the third. The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(double) * &lt;input v size&gt; and typeof(double) * &lt;input v2 size&gt;. The size of the write only buffer is
         *                             typeof(double) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on both v and v2 respectively.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<double>* v, std::vector<double>* v2, const std::vector<double> v3, const ROS_OpenCL_Params* params=NULL);

        /**
         * @brief                      The function that initiates kernel processing.
         *
         *                             It uses a read/write buffer to send and receive
         *                             data from the kernel for the first, second and third vector.
         *                             The global work size used by default,
         *                             matches the size of the first input vector. The size of the read/write
         *                             buffers is typeof(double) * &lt;input v size&gt;, 
         *                             typeof(double) * &lt;input v2 size&gt; and typeof(double) * &lt;input v3 size&gt;. Changes made inside the kernel are overwritten on all three vectors.
         *
         * @param  v                   The input data.
         * @param  v2                  Secondary input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset to be compared with v.
         * @param  v3                  Extra input data. Could be a small set of complementary values, or a 
         *                             full-scale dataset.
         * @param  params              <b>optional</b> A ROS_OpenCL_Params object that includes the following params:
         *                             - global_work_size: A vector of size_t that changes the global worker size of 
         *                             the kernel according to its contents. In this function it should contain a maximum of two elements.
         *                             The rest of the values are ignored.
         *                             - buffers_size: A vector of size_t that changes the size of the buffers used to communicate
         *                              with the kernel according to its contents. In this function it should contain only two elements.
         *                             The rest of the values are ignored.
         *                             - multi_dimensional: A boolean that states if the kernel is multidimensional. By default, this parameter
         *                             is set to false. Generally, if the multi_dimensional is true but global_work_size is empty, the default 
         *                             sizes of the buffers will be used. If global_work_size is not empty, the value of multi_dimensional is 
         *                             ignored with a warning.
         *
         */
        void process(std::vector<double>* v, std::vector<double>* v2, std::vector<double>* v3, const ROS_OpenCL_Params* params=NULL);


        // |                             |
        // |            TODO             |
        // |  -- Not yet implemented --  |
        // |                             |
        // v                             v

        // Check documentation again, especially on two_dimensional->multi_dimensional parts!
};

}
